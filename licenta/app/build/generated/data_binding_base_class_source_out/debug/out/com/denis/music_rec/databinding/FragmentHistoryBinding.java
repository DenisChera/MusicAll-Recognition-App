// Generated by data binding compiler. Do not edit!
package com.denis.music_rec.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.denis.music_rec.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentHistoryBinding extends ViewDataBinding {
  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final FloatingActionButton changeTheme;

  @NonNull
  public final FloatingActionButton deleteAllBtn;

  @NonNull
  public final ImageView emptyImage;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final FrameLayout historyContainer;

  @NonNull
  public final LinearLayout lnContainer;

  @NonNull
  public final TextView noDataText;

  @NonNull
  public final Toolbar toolbar;

  protected FragmentHistoryBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppBarLayout appbar, FloatingActionButton changeTheme, FloatingActionButton deleteAllBtn,
      ImageView emptyImage, FloatingActionButton fab, FrameLayout historyContainer,
      LinearLayout lnContainer, TextView noDataText, Toolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appbar = appbar;
    this.changeTheme = changeTheme;
    this.deleteAllBtn = deleteAllBtn;
    this.emptyImage = emptyImage;
    this.fab = fab;
    this.historyContainer = historyContainer;
    this.lnContainer = lnContainer;
    this.noDataText = noDataText;
    this.toolbar = toolbar;
  }

  @NonNull
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_history, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentHistoryBinding>inflateInternal(inflater, R.layout.fragment_history, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_history, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentHistoryBinding>inflateInternal(inflater, R.layout.fragment_history, null, false, component);
  }

  public static FragmentHistoryBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentHistoryBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentHistoryBinding)bind(component, view, R.layout.fragment_history);
  }
}
